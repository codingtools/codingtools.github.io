(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{106:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));n(0);var i=n(113);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}const l={id:"minify",title:"minify",sidebar_label:"minify"},s=[{value:"cdt minify [FILE]",id:"cdt-minify-file",children:[]},{value:"Minifying a file",id:"minifying-a-file",children:[]},{value:"Specifying file type",id:"specifying-file-type",children:[]},{value:"Writing output to a file",id:"writing-output-to-a-file",children:[]}],a={rightToc:s},c="wrapper";function p({components:e,...t}){return Object(i.b)(c,o({},a,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"cdt-minify-file"},Object(i.b)("inlineCode",{parentName:"h3"},"cdt minify [FILE]")),Object(i.b)("p",null,"Minify functionality, Allows user to minify supported file."),Object(i.b)("pre",null,Object(i.b)("code",o({parentName:"pre"},{className:"language-bash"}),"USAGE\n  $ cdt minify [FILE]\n\nOPTIONS\n  -f, --file=file              file to be minified\n  -h, --help                   show CLI help\n  -o, --outputFile=outputFile  output file path\n\n  -t, --type=type              type of file to be minified, it will try to find type\n                               with extension supported: JS, HTML/HTM, CSS\n\n")),Object(i.b)("h3",{id:"minifying-a-file"},"Minifying a file"),Object(i.b)("hr",null),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"( supported type: JS, HTML/HTM, CSS )"),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",o({parentName:"pre"},{className:"language-bash"}),'$ cdt minify test.js\n\u2139  info      reading file: test.js\n\u2139  info      file type: JS\n\u2714 file: undefined minified\n\u2714  success   minified output:\nconsole.log("lorem ipsum");let x=10;x<10?console.log("x is less than: "+x):x>10?console.log("x is more than: "+x):console.log("x is equals to: "+x);\n')),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"we can also use ",Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"-f flag to pass file path")))),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",o({parentName:"pre"},{className:"language-bash"}),'$ cdt minify -f test.js\n\u2139  info      reading file: test.js\n\u2139  info      file type: JS\n\u2714 file: undefined minified\n\u2714  success   minified output:\nconsole.log("lorem ipsum");let x=10;x<10?console.log("x is less than: "+x):x>10?console.log("x is more than: "+x):console.log("x is equals to: "+x);\n')),Object(i.b)("p",{parentName:"blockquote"},"Note: ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"-f flag"))," will override the string file path passed with argument")),Object(i.b)("h3",{id:"specifying-file-type"},"Specifying file type"),Object(i.b)("hr",null),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"We can use  -t or --type flag  for passing type e.g. JS"),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",o({parentName:"pre"},{className:"language-bash"}),'$ cdt minify -t js test.js\n\u2139  info      reading file: test.js\n\u2139  info      file type: JS\n\u2714 file: undefined minified\n\u2714  success   minified output:\nconsole.log("lorem ipsum");let x=10;x<10?console.log("x is less than: "+x):x>10?console.log("x is more than: "+x):console.log("x is equals to: "+x);\n')),Object(i.b)("p",{parentName:"blockquote"},"Note: If a invalid type is given ex. if HTML is given and file is JS, then we'll get an error.")),Object(i.b)("h3",{id:"writing-output-to-a-file"},"Writing output to a file"),Object(i.b)("hr",null),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"We can use -o or --output flag to pass output file path"),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",o({parentName:"pre"},{className:"language-bash"}),"cdt minify -f test.css -o output.css\n\u2139  info      reading file: test.css\n\u2139  info      file type: CSS\n\u2714 file: test/resources/test.css minified\n\u2139  info      Could not find file: output.css, creating new one\n\u2714  success   output written to file: output.css\n"))))}p.isMDXComponent=!0}}]);